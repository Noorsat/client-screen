export const getErrorMessage = (code : string) => {
    switch (code){
        case "pay_deadlines_gone": return "Установлены временные ограничения на сеанс. Пожалуйста, проверьте настройки сеанса в менеджере";
        break;
        case "ticket_status_validation_error": return "Не корректный статус билета. Обратитесь к администратору";
        break;
        case "ticket_seats_condition_error": return "Места не найдены. Попробуйте снова или обратитесь к администратору";
        break;
        case "deadlines_not_found": return "Не установлены временные ограничения на сеанс. Пожалуйста, проверьте настройки сеанса в менеджере";
        break;
        case "deadline_convert_error": return "Не корректно установлены временные ограничения на сеанс. Пожалуйста, проверьте настройки сеанса в менеджере";
        break;
        case "cashier_convert_error": return "Кассир не найден. Обратитесь к администратору";
        break;
        case "contract_convert_error": return "Контракт указан не верно. Обратитесь к администратору";
        break;
        case "timeframe_convert_error": return "Не корректная дата или время сеанса. Пожалуйста, проверьте настройки сеанса в менеджере";
        break;
        case "seats_convert_error": return "Место указано некорректно. Обратитесь к администратору";
        break;
        case "ticket_seat_validation_error": return "Места не найдены. Обратитесь к администратору";
        break;
        case "discount_not_found": return "Тариф не найден. Пожалуйста, проверьте настройки сеанса в менеджере";
        break;
        case "discount_convert_error": return "Не корректный тариф. Пожалуйста, проверьте настройки сеанса в менеджере";
        break;
        case "payment_convert_error": return "Не корректный тип оплаты. Обратитесь к администратору";
        break;
        case "detail_convert_error": return "Невозможно сформировать билет. Обратитесь к администратору";
        break;
        case "object_convert_error": return "Невозможно сформировать билет. Обратитесь к администратору";
        break;
        case "hall_convert_error": return "Невозможно сформировать билет. Обратитесь к администратору";
        break;
        case "movie_convert_error": return "Невозможно сформировать билет. Обратитесь к администратору";
        break;
        case "seance_convert_error": return "Невозможно сформировать билет. Обратитесь к администратору";
        break;
        case "ticket_convert_error": return "Не удалось сформировать билет. Обратитесь к администратор";
        break;
        case "filter_validation_error": return "Непредвиденная ошибка. Обратитесь к администратору";
        break;
        case "filter_not_found": return "Непредвиденная ошибка. Обратитесь к администратору";
        break;
        case "discount_error": return "Не корректная передача тарифа при подсчете суммы заказа. Обратитесь к администратору";
        break;
        case "ticket_not_found": return "Билет не найден. Обратитесь к администратору";
        break;
        case "ticket_get_error": return "Билет не найден. Обратитесь к администратору";
        break;
        case "ticket_seats_conflict": return "Данные места заняты. Выберите другие места";
        break;
        case "ticket_create_write_exception": return "Не удалось сформировать билет. Попробуйте сноваы";
        break;
        case "ticket_create_error": return "Не удалось сформировать билет. Попробуйте снова";
        break;
        case "ticket_update_error": return "Невозможно обновить статус билета. Повторите попытку или обратитесь к администратору";
        break;
        case "schedule_not_found": return "Не найдено. Проверьте информацию по сеансу в менеджере";
        break;
        case "seance_not_found": return "Не найдено. Проверьте информацию по сеансу в менеджере";
        break;
        case "contract_not_found": return "Не найдено. Проверьте информацию по сеансу в менеджере";
        break;
        case "seats_not_found": return "Не найдено. Проверьте информацию по сеансу в менеджере";
        break;
        case "seat_not_found": return "Не найдено. Проверьте информацию по сеансу в менеджере";
        break;
        case "payment_not_found": return "Не найдено. Проверьте информацию по сеансу в менеджере";
        break;
        case "activate_deadline_not_found": return "Невозможно активировать билет. Проверьте временные настройки сеанса в менеджере";
        break;
        case "activate_deadlines_gone": return "Просрочено время активации билета";
        break;
        case "pay_deadline_not_found": return "Невозможно провести оплату. Проверьте временные настройки сеанса в менеджере";
        break;
        case "reserve_deadline_not_found": return "Бронирование невозможно. Проверьте временные настройки сеанса в менеджере";
        break;
        case "reserve_deadlines_gone": return "Просрочено время для бронирования билета";
        break;
        case "return_deadline_not_found": return "Возврат невозможен. Проверьте временные настройки сеанса в менеджере";
        break;
        case "return_deadlines_gone": return "Просрочено время для возврата билета";
        break;
        case "user_not_found": return "Такого пользователя не существует"
    }
        
}